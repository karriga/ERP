<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jukusoft</groupId>
    <artifactId>erp-backend</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <modules>
        <module>erp-library</module>
        <module>erp-core</module>
        <module>erp-server</module>
        <module>app-server</module>
    </modules>

    <properties>
        <java.version>1.9</java.version>
        <junit.version>4.12</junit.version>
        <json.version>20170516</json.version>
        <ini4j.version>0.5.4</ini4j.version>

        <!-- vertx.io version -->
        <vertx.version>3.4.2</vertx.version>

        <!-- hazelcast version -->
        <hazelcast.version>3.8.6</hazelcast.version>

        <apache.commons.lang.version>3.5</apache.commons.lang.version>

        <!-- Overwritten by the test configuration,otherwise the JaCoCo agent cannot be attached.Details see http://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html -->
        <argLine>-Xms512m -Xmx1024m</argLine>

        <!-- file encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <!-- JUnit tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- set Java version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.4</version>
                <configuration>
                    <charset>UTF-8</charset>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> -->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.4</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>4.3.0</version>
                <configuration>
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>

                    <sourceDirectories>
                        <sourceDirectory>${basedir}/erp-core/src/main/java</sourceDirectory>
                        <sourceDirectory>${basedir}/erp-server/src/main/java</sourceDirectory>
                    </sourceDirectories>
                </configuration>
                <!-- travis CI doesnt requires an rep token -->
                <!-- <configuration>
                    <repoToken>repoToken</repoToken>
                </configuration> -->
            </plugin>
        </plugins>
    </build>

</project>